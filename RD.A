'|RD.A diverse Funktionen
'|     aus DiskWorks
'| (C) 1992 by KiKiSoft
'+-----------------------
RDSRC: DATEN VOM Q-LAUFWERK EINLESEN
LD A,(QUELLE)
CP "C"
JR NZ,RS_03
XOR A
LD (COUNT),A
LD (MARKED),A
LD (FPTR),A
JP CLS

RS_03:
LD DE,FCB   FCB MIT
LD C,&1A    SETDTA
CALL FILE   ERZEUGEN
JR NC,RS_01
JP FEHLER

RS_01:
CALL SETFCB DATEN SETZEN
LD C,SFIRST ERSTEN SUCHEN
CALL FILE
JR NC,NXT_0   

'FEHLER AUSGEBEN
LD HL,COUNT
LD (HL),&00

RS_02:
JP FEHLER

NXT_0:
LD HL,DIRMEM  TRANSFERADR
LD (DMPTR),HL SETZEN
XOR A
LD (COUNT),A
LD (MARKED),A
INC A
LD (FPTR),A

NXT_1: ERSTER GEFUNDEN!
CALL TFDATA   DATENTRANSFER
CALL SETFCB
LD C,SNEXT    NAECHSTEN
CALL FILE     SUCHEN
JR NC,NXT_1

CP &98
SCF
CCF
RET Z

JR RS_02

TFDATA: DATEN IN DEN ANZEIGE-
'       BEREICH KOPIEREN
PUSH HL
PUSH DE
PUSH BC
PUSH AF
LD A,(DMPTR)  WOHIN SOLL'S
LD L,A
LD A,(DMPTR+1)
LD H,A     HL=ZIELADR

LD DE,FCB  DE=QUELLE
EX DE,HL
LD BC,&000C

LD A,(DE)  DATEI GELôSCHT?
CP KILLED
JR Z,TFD_5

PUSH DE    ZIEL MERKEN

LDIR       TRANSFER!

CALL DATELN  DATUM&LéNGE
POP DE
EX DE,HL
LD BC,FBFLEN  FILENAMELENGTH
ADC HL,BC    ADDIEREN
DEC HL       MARKIERUNG
XOR A
LD (HL),A    LOESCHEN
INC HL
LD A,L       UND...
LD (DMPTR),A
LD A,H
LD (DMPTR+1),A SPEICHERN

LD A,(COUNT)  ANZAHL FILES
INC A         HOCHZAEHLEN
LD (COUNT),A  SPEICHERN

TFD_5:
POP AF
POP BC
POP DE
POP HL
RET

SETFCB:     FCB MIT DATEN
PUSH AF     FUELLEN
PUSH HL

LD A,(QUELLE) QUELLE LESEN
CALL Q_TEXT

SFCB_0:
LD HL,FCB   FUELLEN
XOR A       FCB-NR
LD (HL),A

INC HL      DEVICE
LD B,4
SFCB_1:
LD A,(DE)
LD (HL),A
INC DE
INC HL
DJNZ SFCB_1

LD DE,FCB+&09 'FILENAME
LD HL,FMASK
LD BC,FNLEN
LDIR

LD DE,FCB
POP HL
POP AF
RET

Q_TEXT: DE MIT QUELLTXT 
'       LADEN
CP "X"        UND ENTSPR.
LD DE,X_TXT   TEXT BESTIMMEN
RET Z
CP "Y"
LD DE,Y_TXT
RET Z
CP "1"
LD DE,S1_TXT
RET Z
CP "2"
LD DE,S2_TXT
RET Z
LD DE,C1_TXT
RET

FEHLER:
PUSH AF
CALL MENLIN

CP &97
LD DE,FT00
JR Z,FEAUS1

CP &98
LD DE,FT01
JR Z,FEAUS1

CP &9A
LD DE,FT02
JR Z,FEAUS1

CP &9B
LD DE,FT03
JR Z,FEAUS1

CP &9D
LD DE,FT04
JR Z,FEAUS1

CP &9F
LD DE,FT05
JR Z,FEAUS1

CP &A0
LD DE,FT06
JR Z,FEAUS1

CP &A1
LD DE,FT07
JR Z,FEAUS1

CP &A2
LD DE,FT08
JR Z,FEAUS1

CP &A3
LD DE,FT09
JR Z,FEAUS1

CP &A4
LD DE,FT10
JR Z,FEAUS1

CP &A7
LD DE,FT11
JR Z,FEAUS1

CP &A8
LD DE,FT12
JR Z,FEAUS1

LD DE,FT13

FEAUS1:
POP AF

FEAUS:
PUSH AF
CALL PRINT
LD DE,&0003
LD A,26
CALL RVSCHR
CALL BEEP
CALL INKEY

FT_EX:
POP AF
SCF
RET

FT00:
DEFB "151 Datei gibt's schon"
DEFB &00

FT01:
DEFB "152 Datei nicht gefunden!"
DEFB &00

FT02:
DEFB "154 Datei bereits offen!"
DEFB &00

FT03:
DEFB "155 GerÑt nicht vorhanden"
DEFB &00

FT04:
DEFB "157 Falscher Dateiname!"
DEFB &00

FT05:
DEFB "159 Disk schreibgeschÅtzt!"
DEFB &00

FT06:
DEFB "160 Keine Diskette!"
DEFB &00

FT07:
DEFB "161 Disk nicht formatiert!"
DEFB &00

FT08:
DEFB "162 Schreib- Lesefehler!"
DEFB &00

FT09:
DEFB "163 Falsche Disk(Wechsel)!"
DEFB &00

FT10:
DEFB "164 Diskette voll!"
DEFB &00

FT11:
DEFB "167 Fataler Fehler!"
DEFB &00

FT12:
DEFB "168 Akkus leer!"
DEFB &00

FT13:
DEFB "99 sonstiger Fehler!"
DEFB &00

SWAP:  ZIEL<->QUELLE
CALL SETWLD
CALL SV_FMSK
CALL SWP_01
JR C,SWP_01
RET

SWP_01:
LD A,(QUELLE)
PUSH AF
LD A,(ZIEL)
LD (QUELLE),A
POP AF
LD (ZIEL),A
CALL RDSRC
RET NC
LD A,(&F89B)
CP &98
SCF
CCF
RET Z
SCF
RET

C_ZIEL: ZIELDRIVE AENDERN
CALL MENLIN
LD DE,Q_TXT
CALL PRINT
LD DE,&0003
CALL CRSRSET
LD DE,Z_TXT
CALL PRINT
CALL Q_IN
CP MODE
RET Z

LD (ZIEL),A
RET

IMASK: DATEIMASKE EINGEBEN
CALL MENLIN
LD HL,MI_TXT
LD DE,&0A03
LD B,&0A
LD C,&00
CALL INPUT
RET C

LD HL,ASTR  A$
LD DE,FMASK
LD A,(HL)
CP CR NICHTS EINGEGEBEN?
JR Z,NIX

'SET FILENAME
CALL SETFN
RET C
JP RDSRC

NIX:
CALL SETWLD
JP RDSRC

SETFN:  FILENAME SETZEN
'HL=EINGABE
'DE=ZIEL

PUSH HL
LD B,13  13 ZEICHEN MAX
'        INKL. "."

SF_01:
LD A,(HL)
INC HL
CP CR
JR Z,SF_02
DJNZ SF_01

'FEHLER IM DATEINAMEN
SF_ER:
LD A,&9D
CALL FEHLER
POP HL
RET

SF_02:
POP HL
PUSH HL
LD B,9  NAME öBERPRöFEN

SF_03:
LD A,(HL)
INC HL
CP "."
JR Z,SF_04
CP CR
JR Z,SF_04
DJNZ SF_03

JR SF_ER

SF_04:
CP CR
JR Z,SF_06
LD B,&04  EXTENSION öBERPRöFEN

SF_05:
LD A,(HL)
INC HL
CP "."
JR Z,SF_ER
CP CR
JR Z,SF_06
DJNZ SF_05

JR SF_ER

SF_06: DATEINAME OK
' < 14 ZEICHEN INKL. "."
' NAME <= 8
' EXT  <= 3 (FALLS VORH.)
POP HL

LD B,&08  ZUERST NAME
CALL SF_07
LD B,&03  DANN EXT
LD A,(HL)
CP CR
JR Z,SF_08
INC HL

SF_07:  DATEN öBERTRAGEN
LD A,(HL)

CP "*"   WILDCARDS?
JR Z,SF_11
CP "."   TRENNER?
JR Z,SF_08
CP CR    ENDE?
JR Z,SF_08
LD (DE),A
INC HL
INC DE
DJNZ SF_07

SF_08:
LD A,B
OR A
JR Z,SF_10
LD A," "

SF_09: BLANKS ANHéNGEN
LD (DE),A
INC DE
DJNZ SF_09

SF_10:
RET

SF_11:
INC HL
LD A,"?"
JR SF_09

DISKCP:
'Kopieren einer Diskette
'in mehreren Schritten (5)
'setzt Modul S1: voraus
'hier die Holzhammermethode
'Hier ist die COPY-Routine
'insgesamt 10 Spuren mit 8 je Sektoren
CALL ISDISK
JR C,DK_01
LD A,155
JP FEHLER

DK_01:
CALL CLS
CALL TXTWTS
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DREAD  **LESEN**
LD A,&01    X:
LD DE,0    
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTA
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DWRITE **SCHREIBEN**
LD A,&01    X:
LD DE,0
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTS
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DREAD  **LESEN**
LD A,&01    X:
LD DE,&0307
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTA
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DWRITE **SCHREIBEN**
LD A,&01    X:
LD DE,&0307
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTS
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DREAD  **LESEN**
LD A,&01    X:
LD DE,&0706
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTA
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DWRITE **SCHREIBEN**
LD A,&01    X:
LD DE,&0706
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTS
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DREAD  **LESEN**
LD A,&01    X:
LD DE,&0B05
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTA
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DWRITE **SCHREIBEN**
LD A,&01    X:
LD DE,&0B05
LD B,&1F    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTS
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DREAD  **LESEN**
LD A,&01    X:
LD DE,&0F04
LD B,&04    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY
JP C,DC_EX

CALL TXTWTA
RET Z

LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,DWRITE **SCHREIBEN**
LD A,&01    X:
LD DE,&0F04
LD B,&04    Anzahl Sektoren
LD HL,DBUFF Puffer
CALL DO_COPY

DC_EX:
LD A,&05
LD HL,&4008
EX AF,AF'
EXX
LD C,RESTORE
LD A,&01    X:
CALL BANKCALL
CALL CLS
JP RDSRC

DO_COPY:  AUFRUF COPY-
'         ROUTINE
CALL BANKCALL
RET NC
JP DSK_ER

TXTWTA:
LD DE,AIM_TX
JR TXTWT

TXTWTS:
LD DE,SRC_TX
TXTWT:
CALL UPSCRL
CALL MENLIN
CALL PRINT
CALL INKEY
CP MODE
RET

ISDISK: IST CE-1600F DA?
' CY=1 JA
' CY=0 NEIN
LD A,(&F0AE)
BIT 2,A
JR NZ,RYES
SCF
CCF
RET

RYES:
SCF
RET

SRC_TX:
DEFB "Insert SOURCE-Disk"
DEFB &00

AIM_TX:
DEFB "Insert TARGET-Disk"
DEFB &00

Z_TXT:
DEFB "TAR"
DEFB 0

